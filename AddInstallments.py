# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'AddInstallments.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QCompleter
from PyQt5.QtCore import QDate
from main import *
# from chooseInPayment import *
import mysql.connector

mydb = mysql.connector.connect(
    host="127.0.0.1",
    user="local",
    password="",
    database="mpdev"
)

class Ui_InstallmentWindow(object):
    def setupUi(self, InstallmentWindow):
        InstallmentWindow.setObjectName("InstallmentWindow")
        InstallmentWindow.resize(1278, 808)
        InstallmentWindow.setStyleSheet("QMainWindow{\n"
                                        "background-color: #212121;\n"
                                        "}\n"
                                        "\n"
                                        "QPushButton{\n"
                                        "background-color: #212121;\n"
                                        "Color: #eeeeee;\n"
                                        "border-radius: 20px;\n"
                                        "}\n"
                                        "\n"
                                        "QPushButton#addButton{\n"
                                        "border: 2px solid #0d7377;\n"
                                        "}\n"
                                        "\n"
                                        "QPushButton#addButton:hover{\n"
                                        "border: 3px solid #32e0c4;\n"
                                        "background-color: #0d7377;\n"
                                        "}\n"
                                        "\n"
                                        "QPushButton#submitButton{\n"
                                        "border: 2px solid #0d7377;\n"
                                        "border-radius: 25px;\n"
                                        "}\n"
                                        "\n"
                                        "QPushButton#submitButton:hover{\n"
                                        "border: 3px solid #32e0c4;\n"
                                        "background-color: #0d7377;\n"
                                        "}\n"
                                        "\n"
                                        "QPushButton#deleteAllButton:hover{\n"
                                        "border: 3px solid rgb(255, 0, 0);\n"
                                        "background-color: #9a0002;\n"
                                        "}\n"
                                        "\n"
                                        "QPushButton#deleteAllButton{\n"
                                        "color: #eeeeee;\n"
                                        "background-color: #212121;\n"
                                        "border: 2px solid #9a0002;\n"
                                        "border-radius: 20px;\n"
                                        "}\n"
                                        "\n"
                                        "QPushButton#cancelButton{\n"
                                        "color: #eeeeee;\n"
                                        "background-color: #212121;\n"
                                        "border: 2px solid #9a0002;\n"
                                        "border-radius: 25px;\n"
                                        "}\n"
                                        "\n"
                                        "QPushButton#cancelButton:hover{\n"
                                        "border: 3px solid rgb(255, 0, 0);\n"
                                        "background-color: #9a0002;\n"
                                        "}\n"
                                        "\n"
                                        "QLineEdit{\n"
                                        "padding-left: 6px;\n"
                                        "padding-right: 6px;\n"
                                        "border: 2px solid #0d7377;\n"
                                        "border-radius: 5px;\n"
                                        "}\n"
                                        "\n"
                                        "QLineEdit:hover{\n"
                                        "border: 3px solid #32e0c4;\n"
                                        "}\n"
                                        "\n"
                                        "QSpinBox{\n"
                                        "border: 2px solid #0d7377;\n"
                                        "}\n"
                                        "\n"
                                        "QSpinBox:hover{\n"
                                        "border: 2px solid #32e0c4;\n"
                                        "}\n"
                                        "\n"
                                        "QLabel{\n"
                                        "color: #eeeeee;\n"
                                        "}\n"
                                        "\n"
                                        "QLabel#installmentsLabel{\n"
                                        "color: #32e0c4;\n"
                                        "}")
        self.centralwidget = QtWidgets.QWidget(InstallmentWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem, 1, 2, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem1, 1, 0, 1, 1)
        self.verticalLayout_6 = QtWidgets.QVBoxLayout()
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.installmentsLabel = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(34)
        font.setBold(True)
        font.setWeight(75)
        self.installmentsLabel.setFont(font)
        self.installmentsLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.installmentsLabel.setObjectName("installmentsLabel")
        self.verticalLayout_6.addWidget(self.installmentsLabel)
        spacerItem2 = QtWidgets.QSpacerItem(20, 130, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        self.verticalLayout_6.addItem(spacerItem2)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setMinimumSize(QtCore.QSize(300, 40))
        self.label.setMaximumSize(QtCore.QSize(300, 40))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(12)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setMinimumSize(QtCore.QSize(300, 40))
        self.lineEdit.setMaximumSize(QtCore.QSize(300, 40))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lineEdit.setFont(font)
        self.lineEdit.setText("")
        self.lineEdit.setClearButtonEnabled(True)
        self.lineEdit.setObjectName("lineEdit")
        self.verticalLayout.addWidget(self.lineEdit)
        spacerItem3 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        self.verticalLayout.addItem(spacerItem3)
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setMinimumSize(QtCore.QSize(300, 40))
        self.label_2.setMaximumSize(QtCore.QSize(300, 40))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(12)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.verticalLayout.addWidget(self.label_2)
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setMinimumSize(QtCore.QSize(300, 40))
        self.lineEdit_2.setMaximumSize(QtCore.QSize(300, 40))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lineEdit_2.setFont(font)
        self.lineEdit_2.setText("")
        self.lineEdit_2.setClearButtonEnabled(True)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.verticalLayout.addWidget(self.lineEdit_2)
        self.verticalLayout_2.addLayout(self.verticalLayout)
        spacerItem4 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        self.verticalLayout_2.addItem(spacerItem4)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setMinimumSize(QtCore.QSize(230, 40))
        self.label_3.setMaximumSize(QtCore.QSize(230, 40))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(12)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.horizontalLayout.addWidget(self.label_3)
        self.noOfInstallment = QtWidgets.QSpinBox(self.centralwidget)  # spin box obj name-> noOfInstallment
        self.noOfInstallment.setMinimumSize(QtCore.QSize(60, 40))
        self.noOfInstallment.setMaximumSize(QtCore.QSize(60, 40))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.noOfInstallment.setFont(font)
        self.noOfInstallment.setObjectName("noOfInstallment")
        self.horizontalLayout.addWidget(self.noOfInstallment)
        self.verticalLayout_2.addLayout(self.horizontalLayout)
        self.horizontalLayout_4.addLayout(self.verticalLayout_2)
        spacerItem5 = QtWidgets.QSpacerItem(60, 40, QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem5)
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setStyleSheet("background-color: #32e0c4;")
        self.line.setFrameShape(QtWidgets.QFrame.VLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.horizontalLayout_4.addWidget(self.line)
        spacerItem6 = QtWidgets.QSpacerItem(60, 20, QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem6)
        self.verticalLayout_4 = QtWidgets.QVBoxLayout()
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        spacerItem7 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_4.addItem(spacerItem7)
        self.label_9 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_9.setFont(font)
        self.label_9.setStyleSheet("color: rgb(50, 224, 196);\n"
                                   "color: rgb(22, 208, 214);\n"
                                   "color: rgb(13, 115, 119);\n"
                                   "color: rgb(50, 224, 196);\n"
                                   "color: rgb(19, 183, 188);")
        self.label_9.setAlignment(QtCore.Qt.AlignCenter)
        self.label_9.setObjectName("label_9")
        self.verticalLayout_4.addWidget(self.label_9)
        spacerItem8 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_4.addItem(spacerItem8)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setMinimumSize(QtCore.QSize(240, 40))
        self.label_4.setMaximumSize(QtCore.QSize(240, 40))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(12)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.horizontalLayout_2.addWidget(self.label_4)
        self.comboBox = QtWidgets.QComboBox(
            self.centralwidget)  # combo box obj name-> comboBox (set on basis of spinbox)
        self.comboBox.setMinimumSize(QtCore.QSize(60, 40))
        self.comboBox.setMaximumSize(QtCore.QSize(60, 40))
        self.comboBox.setObjectName("comboBox")
        self.horizontalLayout_2.addWidget(self.comboBox)
        self.verticalLayout_4.addLayout(self.horizontalLayout_2)
        self.verticalLayout_3 = QtWidgets.QVBoxLayout()
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setMinimumSize(QtCore.QSize(300, 40))
        self.label_5.setMaximumSize(QtCore.QSize(300, 40))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(12)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.verticalLayout_3.addWidget(self.label_5)
        self.lineEdit_3 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_3.setMinimumSize(QtCore.QSize(300, 40))
        self.lineEdit_3.setMaximumSize(QtCore.QSize(310, 40))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lineEdit_3.setFont(font)
        self.lineEdit_3.setText("")
        self.lineEdit_3.setAlignment(QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.lineEdit_3.setClearButtonEnabled(True)
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.verticalLayout_3.addWidget(self.lineEdit_3)
        self.label_8 = QtWidgets.QLabel(self.centralwidget)
        self.label_8.setMinimumSize(QtCore.QSize(300, 40))
        self.label_8.setMaximumSize(QtCore.QSize(300, 40))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(12)
        self.label_8.setFont(font)
        self.label_8.setObjectName("label_8")
        self.verticalLayout_3.addWidget(self.label_8)
        self.dateEdit = QtWidgets.QDateEdit(self.centralwidget)  # date -> dateEdit
        self.dateEdit.setDisplayFormat("yyyy-MM-dd")
        self.dateEdit.setMinimumSize(QtCore.QSize(300, 40))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(12)
        self.dateEdit.setFont(font)
        self.dateEdit.setCalendarPopup(True)
        self.dateEdit.setObjectName("dateEdit")
        self.dateEdit.setDate(QDate.currentDate())  # set current date
        self.verticalLayout_3.addWidget(self.dateEdit)
        self.verticalLayout_4.addLayout(self.verticalLayout_3)
        spacerItem9 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_4.addItem(spacerItem9)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setText("")
        self.label_6.setObjectName("label_6")
        self.horizontalLayout_3.addWidget(self.label_6)
        self.addButton = QtWidgets.QPushButton(self.centralwidget)
        self.addButton.setMinimumSize(QtCore.QSize(100, 40))
        self.addButton.setMaximumSize(QtCore.QSize(100, 40))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.addButton.setFont(font)
        self.addButton.setCursor(QtGui.QCursor(QtCore.Qt.OpenHandCursor))
        self.addButton.setObjectName("addButton")
        self.horizontalLayout_3.addWidget(self.addButton)
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setText("")
        self.label_7.setObjectName("label_7")
        self.horizontalLayout_3.addWidget(self.label_7)
        self.verticalLayout_4.addLayout(self.horizontalLayout_3)
        self.horizontalLayout_4.addLayout(self.verticalLayout_4)
        spacerItem10 = QtWidgets.QSpacerItem(60, 20, QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem10)
        self.line_2 = QtWidgets.QFrame(self.centralwidget)
        self.line_2.setStyleSheet("background-color: #32e0c4;")
        self.line_2.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.horizontalLayout_4.addWidget(self.line_2)
        spacerItem11 = QtWidgets.QSpacerItem(60, 20, QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem11)
        self.verticalLayout_5 = QtWidgets.QVBoxLayout()
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        spacerItem12 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_5.addItem(spacerItem12)
        self.addedInstallmentsLabel = QtWidgets.QLabel(self.centralwidget)
        self.addedInstallmentsLabel.setMinimumSize(QtCore.QSize(260, 40))
        self.addedInstallmentsLabel.setMaximumSize(QtCore.QSize(260, 40))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(12)
        self.addedInstallmentsLabel.setFont(font)
        self.addedInstallmentsLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.addedInstallmentsLabel.setObjectName("addedInstallmentsLabel")
        self.verticalLayout_5.addWidget(self.addedInstallmentsLabel)
        self.installmentList = QtWidgets.QListWidget(self.centralwidget)
        self.installmentList.setMinimumSize(QtCore.QSize(280, 280))
        self.installmentList.setMaximumSize(QtCore.QSize(280, 280))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.installmentList.setFont(font)
        self.installmentList.setDragEnabled(True)
        self.installmentList.setDragDropMode(QtWidgets.QAbstractItemView.DragDrop)
        self.installmentList.setDefaultDropAction(QtCore.Qt.MoveAction)
        self.installmentList.setObjectName("installmentList")
        self.verticalLayout_5.addWidget(self.installmentList)
        self.deleteAllButton = QtWidgets.QPushButton(self.centralwidget)
        self.deleteAllButton.setMinimumSize(QtCore.QSize(280, 40))
        self.deleteAllButton.setMaximumSize(QtCore.QSize(280, 40))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(11)
        self.deleteAllButton.setFont(font)
        self.deleteAllButton.setObjectName("deleteAllButton")
        self.verticalLayout_5.addWidget(self.deleteAllButton)
        self.deleteAllButton.setCursor(QtGui.QCursor(QtCore.Qt.OpenHandCursor))
        spacerItem13 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_5.addItem(spacerItem13)
        self.horizontalLayout_4.addLayout(self.verticalLayout_5)
        self.verticalLayout_6.addLayout(self.horizontalLayout_4)
        spacerItem14 = QtWidgets.QSpacerItem(20, 100, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        self.verticalLayout_6.addItem(spacerItem14)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        spacerItem15 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem15)
        self.submitButton = QtWidgets.QPushButton(self.centralwidget)
        self.submitButton.setMinimumSize(QtCore.QSize(130, 50))
        self.submitButton.setMaximumSize(QtCore.QSize(130, 50))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.submitButton.setFont(font)
        self.submitButton.setCursor(QtGui.QCursor(QtCore.Qt.OpenHandCursor))
        self.submitButton.setObjectName("submitButton")
        self.horizontalLayout_5.addWidget(self.submitButton)
        spacerItem16 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.horizontalLayout_5.addItem(spacerItem16)
        self.cancelButton = QtWidgets.QPushButton(self.centralwidget)
        self.cancelButton.setMinimumSize(QtCore.QSize(130, 50))
        self.cancelButton.setMaximumSize(QtCore.QSize(130, 50))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.cancelButton.setFont(font)
        self.cancelButton.setCursor(QtGui.QCursor(QtCore.Qt.OpenHandCursor))
        self.cancelButton.setObjectName("cancelButton")
        self.horizontalLayout_5.addWidget(self.cancelButton)
        spacerItem17 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem17)
        self.verticalLayout_6.addLayout(self.horizontalLayout_5)
        self.gridLayout.addLayout(self.verticalLayout_6, 1, 1, 1, 1)
        spacerItem18 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout.addItem(spacerItem18, 2, 1, 1, 1)
        spacerItem19 = QtWidgets.QSpacerItem(20, 80, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        self.gridLayout.addItem(spacerItem19, 0, 1, 1, 1)
        InstallmentWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(InstallmentWindow)
        self.statusbar.setObjectName("statusbar")
        InstallmentWindow.setStatusBar(self.statusbar)

        ###### Added Code ########

        cursor = mydb.cursor()
        sql_name_query = "SELECT first_name,middle_name,last_name FROM student_info_table"
        cursor.execute(sql_name_query)
        lst = cursor.fetchall()
        if len(lst) != 0:
            lst = [' '.join(x) for x in lst]
        else:
            lst = []
        completer = QCompleter(lst, self.lineEdit)
        completer.setCaseSensitivity(QtCore.Qt.CaseInsensitive)
        completer.setFilterMode(QtCore.Qt.MatchContains)
        self.lineEdit.setCompleter(completer)
        # completer is set above
        self.retranslateUi(InstallmentWindow)
        self.installmentCount = 0
        self.paymentCount = 0
        self.noOfInstallment.setValue(0)
        self.noOfInstallment.valueChanged.connect(self.comboBoxItems)  # calling combo box with set value in spin box
        self.addButton.clicked.connect(self.addInstallment)  # adding an installment
        self.submitButton.clicked.connect(self.submit)
        self.deleteAllButton.clicked.connect(self.deleteAll)
        self.comboBox.currentIndexChanged.connect(self.setDateChange)
        self.dateEdit.setMinimumDate(date.today())
        self.dateCount = {}
        self.totalamount = 0
        self.totalofinstallmentAmt = 0
        self.name = ""
        self.installmentsArray = {}
        self.paymentCount = 0
        self.payment_id = 0
        self.sum = 0
        QtCore.QMetaObject.connectSlotsByName(InstallmentWindow)

    def comboBoxItems(self):  # setting installment numbers in comboBox
        # take name & amt check its not null and check if its 1st payment and enter in payment table and
        currentVal = self.noOfInstallment.value()
        if currentVal < len(self.installmentsArray):
             self.noOfInstallment.setValue(len(self.installmentsArray))
             self.comboBox.clear()
             for x in range(len(self.installmentsArray)):
                 self.comboBox.addItem(str(x + 1))
        else:
            self.comboBox.clear()
            for x in range(currentVal):
                self.comboBox.addItem(str(x + 1))

        # self.finalComboVal = currentVal
        # if self.installmentsCount != 0:
        #     for x in range(0, self.installmentsCount):
        #         self.comboBox.removeItem(0)

    def setDateChange(self):
        if self.comboBox.currentIndex() != -1:
            self.dateEdit.clearMaximumDate()
            curInstallmentNo = int(self.comboBox.currentText())
            if curInstallmentNo == 1:
                self.dateEdit.setMinimumDate(date.today())
            if len(self.dateCount) != 0:
                for x, y in sorted(self.dateCount.items()):
                    if (curInstallmentNo) > x:
                        self.dateEdit.setMinimumDate(y)
                for x, y in sorted(self.dateCount.items(), reverse=True):
                    if (curInstallmentNo) < x:
                        self.dateEdit.setMaximumDate(y)

    def addInstallment(self):
        if len(self.installmentsArray) == 0:
            #taking name input
            self.name = self.lineEdit.text()
            #checking if it is null
            if not self.name:
                msg = QtWidgets.QMessageBox()
                msg.setIcon(QtWidgets.QMessageBox.Warning)
                msg.setText("Name is not entered.")
                msg.setWindowTitle("Warning")
                msg.exec_()
                return
            #taking total amt input
            amt = self.lineEdit_2.text()
            #checking if total amt is null
            if not amt:
                msg = QtWidgets.QMessageBox()
                msg.setIcon(QtWidgets.QMessageBox.Warning)
                msg.setText("Total amount is not entered.")
                msg.setWindowTitle("Warning")
                msg.exec_()
                return
            self.totalamount = int(self.lineEdit_2.text())  #converting str to int

        #taking current installment number input
        cur_in_no = self.comboBox.currentText()
        #checking if the number is 0
        if not cur_in_no:
            msg = QtWidgets.QMessageBox()
            msg.setIcon(QtWidgets.QMessageBox.Warning)
            msg.setText("Installment number not entered.")
            msg.setWindowTitle("Warning")
            msg.exec_()
            return
        #using the current installment number
        curInstallmentNo = int(self.comboBox.currentText())

        #taking installment amt input
        in_amt = self.lineEdit_3.text()
        #checking if it is empty
        if not in_amt:
            msg = QtWidgets.QMessageBox()
            msg.setIcon(QtWidgets.QMessageBox.Warning)
            msg.setText("Installment amount not entered.")
            msg.setWindowTitle("Warning")
            msg.exec_()
            return
        #using the installment amt
        InstallmentAmt = int(self.lineEdit_3.text())

        curInstallmentDate = self.dateEdit.date().toPyDate()
        tempInstallmentAmt = 0
        tempInstallmentAmt = self.totalofinstallmentAmt + InstallmentAmt
        if curInstallmentNo == 1:
            self.dateEdit.setMinimumDate(curInstallmentDate)
            self.dateCount[1] = curInstallmentDate
        elif curInstallmentNo == self.noOfInstallment.value():
            self.dateEdit.setMaximumDate(curInstallmentDate)
            self.dateCount[self.noOfInstallment.value()] = curInstallmentDate
        else:
            self.dateCount[curInstallmentNo] = curInstallmentDate
        if self.name != "" and self.totalamount != "" and curInstallmentNo != 0 and InstallmentAmt != 0:
            name = tuple(self.name.split(" "))
            if len(name) != 3:
                msg = QtWidgets.QMessageBox()
                msg.setIcon(QtWidgets.QMessageBox.Warning)
                msg.setText("Invalid Name Input")
                msg.setInformativeText("Name field should contain first name, middle name and last name of the student")
                msg.setWindowTitle("Warning")
                msg.exec_()
            elif InstallmentAmt > self.totalamount:
                self.lineEdit.clear()
                msg = QtWidgets.QMessageBox()
                msg.setIcon(QtWidgets.QMessageBox.Warning)
                msg.setText("Check the Installment Amount")
                msg.setInformativeText("Installment Amount cannot be greater than Total Amount")
                msg.setWindowTitle("Warning")
                msg.exec_()
            elif self.totalofinstallmentAmt >= self.totalamount:
                msg = QtWidgets.QMessageBox()
                msg.setIcon(QtWidgets.QMessageBox.Warning)
                msg.setText("Check the Installment Amount")
                msg.setInformativeText("Total installment amount exceed total amount to be paid")
                msg.setWindowTitle("Warning")
                msg.exec_()
            elif tempInstallmentAmt < self.totalamount and len(
                    self.installmentsArray) == self.noOfInstallment.value() - 1:
                msg = QtWidgets.QMessageBox()
                msg.setIcon(QtWidgets.QMessageBox.Warning)
                msg.setText("Check the Installment Amount")
                msg.setInformativeText("Total installment amount is less than the amount to be paid. Please increase "
                                       "the installment amount or increase the number of installments")
                msg.setWindowTitle("Warning")
                tempInstallmentAmt -= InstallmentAmt
                msg.exec_()
            elif ((InstallmentAmt >= self.totalamount or tempInstallmentAmt >= self.totalamount) and len(
                    self.installmentsArray) != self.noOfInstallment.value() - 1) and ((len(
                    self.installmentsArray) < self.noOfInstallment.value()) and len(self.installmentsArray) != 0):
                msg = QtWidgets.QMessageBox()
                msg.setIcon(QtWidgets.QMessageBox.Warning)
                msg.setText("Check the Installment Amount")
                msg.setInformativeText("Verify the following:\n1. Total installment amount matched or exceeded the "
                                       "total amount without using all installments. Try decreasing the number of "
                                       "installments or reduce the installment amount\n2. Single Installment amount "
                                       "must not exceed total amount")
                msg.setWindowTitle("Warning")
                tempInstallmentAmt -= InstallmentAmt
                msg.exec_()
            else:
                self.lineEdit_2.setEnabled(False)
                self.lineEdit.setEnabled(False)
                if curInstallmentNo == 1:
                    self.dateEdit.setMinimumDate(curInstallmentDate)
                    self.dateCount[1] = curInstallmentDate
                elif curInstallmentNo == self.noOfInstallment.value():
                    self.dateEdit.setMaximumDate(curInstallmentDate)
                    self.dateCount[self.noOfInstallment.value()] = curInstallmentDate
                else:
                    self.dateCount[curInstallmentNo] = curInstallmentDate
                installment = (curInstallmentNo, curInstallmentDate, InstallmentAmt)
                self.installmentsArray[curInstallmentNo] = installment
                self.installmentList.clear()
                self.totalofinstallmentAmt = 0
                for x in sorted(self.installmentsArray):
                    y = self.installmentsArray.get(x)
                    self.totalofinstallmentAmt += y[2]
                    if self.totalofinstallmentAmt > self.totalamount:
                        msg = QtWidgets.QMessageBox()
                        msg.setIcon(QtWidgets.QMessageBox.Warning)
                        msg.setText("Check the Installment Amount")
                        msg.setInformativeText("Total installment amount exceed total amount to be paid")
                        print("Hello")
                        msg.setWindowTitle("Warning")
                        msg.exec_()
                        self.totalofinstallmentAmt -= y[2]
                        del self.installmentsArray[y[0]]
                    else:
                        temp = str(y[0]) + ":  " + str(y[1]) + "  Rs. " + str(y[2])
                        self.installmentList.addItem(temp)
                print("Total no. of installments: " + str(len(self.installmentsArray)))
                print(self.installmentsArray)
                if(self.totalamount == self.totalofinstallmentAmt and self.noOfInstallment.value() == len(self.installmentsArray)):
                    self.noOfInstallment.setEnabled(False)
        else:
            msg = QtWidgets.QMessageBox()
            msg.setIcon(QtWidgets.QMessageBox.Warning)
            msg.setText("Please provide all the inputs")
            msg.setWindowTitle("Warning")
            msg.exec_()

    def submit(self):
        cursor = mydb.cursor(buffered=True)
        stud_name = self.lineEdit.text()
        if not stud_name:  #checking if name is entered
            msg = QtWidgets.QMessageBox()
            msg.setIcon(QtWidgets.QMessageBox.Information)
            msg.setText("No entry in Name field")
            msg.setWindowTitle("Abort")
            msg.exec_()
            return
        name = tuple(stud_name.split(" "))
        if len(name)!=3:  #checking if name is entered
            msg = QtWidgets.QMessageBox()
            msg.setIcon(QtWidgets.QMessageBox.Information)
            msg.setText("Wrong entry in Name field")
            msg.setWindowTitle("Abort")
            msg.exec_()
            return
        sql = "SELECT student_id FROM student_info_table WHERE first_name =(%s) AND middle_name =(%s) AND last_name =(%s)"
        cursor.execute(sql, name)
        student_id = cursor.fetchone()
        today_date = QDate.currentDate().toString('yyyy-MM-dd')
        val = (student_id[0], self.installmentList.count(), self.totalamount,0,today_date)
        c = 0
        for x in sorted(self.installmentsArray):
            y = self.installmentsArray.get(x)
            if self.paymentCount == 0:
                sql = "INSERT INTO payment_table (student_id, no_of_installments, total_amt,total_paid, billing_date) VALUES(%s,%s,%s,%s,%s)"
                cursor.execute(sql, val)
                mydb.commit()
                sql = "SELECT payment_id FROM payment_table ORDER BY payment_id DESC"
                cursor.execute(sql)
                pay_id = cursor.fetchone()
                self.payment_id = pay_id[0]
                temp = (student_id[0], self.payment_id, y[0], 'Not Paid', y[2], y[1])
                sql = "INSERT INTO installments_table (student_id, payment_id, installment_no, status, installment_amt, " \
                      "installment_date) VALUES(%s,%s,%s,%s,%s,%s)"
                cursor.execute(sql, temp)
                c += 1
                self.paymentCount += 1
            else:
                sql = "SELECT payment_id FROM payment_table ORDER BY payment_id DESC"
                cursor.execute(sql)
                pay_id = cursor.fetchone()
                self.payment_id = pay_id[0]
                temp = (student_id[0], self.payment_id, y[0], 'Not Paid', y[2], y[1])
                sql = "INSERT INTO installments_table (student_id, payment_id, installment_no, status, installment_amt, " \
                      "installment_date) VALUES(%s,%s,%s,%s,%s,%s)"
                cursor.execute(sql, temp)
                c += 1

        if len(self.installmentsArray) == c:
            mydb.commit()
            self.lineEdit.clear()
            self.lineEdit.setEnabled(True)
            self.lineEdit_2.clear()
            self.lineEdit_2.setEnabled(True)
            self.lineEdit_3.clear()
            self.installmentList.clear()
            self.noOfInstallment.clear()
            self.noOfInstallment.setValue(0)
            self.noOfInstallment.setEnabled(True)
            self.comboBox.clear()
            self.dateEdit.clearMaximumDate()
            self.dateEdit.setMinimumDate(date.today())
            self.dateCount = {}
            self.totalamount = 0
            self.totalofinstallmentAmt = 0
            self.name = ""
            self.installmentsArray = {}
            self.paymentCount = 0
            self.payment_id = 0
            msg = QtWidgets.QMessageBox()
            msg.setIcon(QtWidgets.QMessageBox.Information)
            msg.setText("All Installments Submitted for " + stud_name)
            msg.setWindowTitle("Successful")
            msg.exec_()
        else:
            msg = QtWidgets.QMessageBox()
            msg.setIcon(QtWidgets.QMessageBox.Critical)
            msg.setText("Problem occurred!! Installments not added")
            msg.setWindowTitle("Problem Occurred")
            msg.exec_()

    def deleteAll(self):
        self.lineEdit.clear()
        self.lineEdit.setEnabled(True)
        self.lineEdit_2.clear()
        self.lineEdit_2.setEnabled(True)
        self.lineEdit_3.clear()
        self.installmentList.clear()
        self.noOfInstallment.clear()
        self.noOfInstallment.setValue(0)
        self.noOfInstallment.setEnabled(True)
        self.comboBox.clear()
        self.dateEdit.clearMaximumDate()
        self.dateEdit.setMinimumDate(date.today())
        self.dateCount = {}
        self.totalamount = 0
        self.totalofinstallmentAmt = 0
        self.name = ""
        self.installmentsArray = {}
        self.paymentCount = 0
        self.payment_id = 0
        msg = QtWidgets.QMessageBox()
        msg.setIcon(QtWidgets.QMessageBox.Warning)
        msg.setText("All Installments Deleted ")
        msg.setWindowTitle("Deleted")
        msg.exec_()

    def retranslateUi(self, InstallmentWindow):
        _translate = QtCore.QCoreApplication.translate

        InstallmentWindow.setWindowTitle(_translate("InstallmentWindow", "MainWindow"))
        self.installmentsLabel.setText(_translate("InstallmentWindow", "INSTALLMENTS"))

        self.label.setText(_translate("InstallmentWindow", "Student\'s Name:"))
        self.label_2.setText(_translate("InstallmentWindow", "Total Amount:"))
        self.label_3.setText(_translate("InstallmentWindow", "Number of Installments:"))
        self.label_9.setText(_translate("InstallmentWindow", "Fill Information for each installment here"))
        self.label_4.setText(_translate("InstallmentWindow", "Select Installment Number:"))
        self.label_5.setText(_translate("InstallmentWindow", "Enter Installment Amount:"))
        self.label_8.setText(_translate("InstallmentWindow", "Select Payment Date:"))
        self.addButton.setText(_translate("InstallmentWindow", "Add"))
        self.addedInstallmentsLabel.setText(_translate("InstallmentWindow", "Installments Added"))
        self.submitButton.setText(_translate("InstallmentWindow", "Submit"))
        self.cancelButton.setText(_translate("InstallmentWindow", "Back"))
        self.deleteAllButton.setText(_translate("InstallmentWindow", "Delete All"))


        # INPUT VALIDATOR
        # ----String----#
        self.myregex = QtCore.QRegExp("[A-Za-z]+")
        self.myregex3 = QtCore.QRegExp("[A-Za-z ]+")
        self.myregex2 = QtCore.QRegExp("[0-9A-Za-z, -]+")
        self.myregexph = QtCore.QRegExp("[0-9]+")
        self.validate_name()
        self.validate_amt()

        # validate name
    def validate_name(self):
        my_validator = QtGui.QRegExpValidator(self.myregex3, self.lineEdit)
        self.lineEdit.setValidator(my_validator)

    def validate_amt(self):
        my_validator = QtGui.QRegExpValidator(self.myregexph, self.lineEdit_2)
        self.lineEdit_2.setValidator(my_validator)
        my_validator = QtGui.QRegExpValidator(self.myregexph, self.lineEdit_3)
        self.lineEdit_3.setValidator(my_validator)


if __name__ == '__main__':
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_InstallmentWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
